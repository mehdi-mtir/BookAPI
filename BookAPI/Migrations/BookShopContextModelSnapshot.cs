// <auto-generated />
using System;
using BookAPI.data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookAPI.Migrations
{
    [DbContext(typeof(BookShopContext))]
    partial class BookShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookAPI.Entities.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Jeff",
                            LastName = "Olsen"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Charles",
                            LastName = "Duhigg"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Victor",
                            LastName = "Hugo"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Emile",
                            LastName = "Zola"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Pablo",
                            LastName = "Coelho"
                        });
                });

            modelBuilder.Entity("BookAPI.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly>("PublishDate")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Price = 17.50m,
                            PublishDate = new DateOnly(1990, 1, 1),
                            Title = "The slight Edge"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 5,
                            Price = 22.50m,
                            PublishDate = new DateOnly(1988, 1, 1),
                            Title = "L'alchimiste"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 5,
                            Price = 19.50m,
                            PublishDate = new DateOnly(2003, 1, 1),
                            Title = "Onze minutes"
                        });
                });

            modelBuilder.Entity("BookAPI.Entities.Book", b =>
                {
                    b.HasOne("BookAPI.Entities.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("BookAPI.Entities.Author", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
